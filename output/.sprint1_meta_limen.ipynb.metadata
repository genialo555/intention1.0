{"timestamp": 1748515771.610821, "stored_source_code": "# declare a list tasks whose products you want to use as inputs\nupstream = None\n\n# Sprint 1 \u2013 MetaLIMEN Foundations\n\nIn this notebook we complete Sprint 1 by preparing conceptual data, training a MetaLIMEN model stub, defining intentions, and visualizing the meta-intention space.\n\n## 1. Prepare Conceptual Data\n%%bash\npython scripts/prepare_conceptual_data.py \\\n  --config configs/meta_limen_config.yaml \\\n  --output_dir data/conceptual_corpus\nInspect output:\nimport json\nwith open(\"data/conceptual_corpus/concepts.jsonl\") as f:\n    lines = f.readlines()\nprint(f\"Prepared {len(lines)} concept entries\")\nsample = json.loads(lines[0])\nsample\n## 2. Instantiate MetaLIMEN & Define Intentions\nfrom modules.meta_limen.meta_limen import MetaLIMEN\nimport pandas as pd\nimport yaml\n\ncfg_file = \"configs/meta_limen_config.yaml\"\nml = MetaLIMEN(cfg_file)\ncfg = yaml.safe_load(open(cfg_file))\ndomains = [d[\"name\"] for d in cfg[\"target_domains\"]]\nintents = ml.define_learning_intentions()\ndf = pd.DataFrame(intents)\ndf[[\"domain\",\"learning_priority\",\"curriculum_weight\",\"meta_position\"]]\n## 3. Visualize Meta-Intention Space\nfrom sklearn.metrics.pairwise import cosine_similarity\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nvectors = np.vstack([i[\"meta_position\"] for i in intents])\nsim = cosine_similarity(vectors)\nsns.heatmap(sim, xticklabels=df.domain, yticklabels=df.domain, cmap=\"magma\", annot=True)\nplt.title(\"Inter-Domain Cosine Similarities\")\nplt.show()\n## 4. Run Unit Tests\n%%bash\npytest tests/unit/test_meta_limen.py -q || true", "params": {}}