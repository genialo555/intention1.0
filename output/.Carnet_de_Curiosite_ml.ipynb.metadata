{"timestamp": 1748515793.766963, "stored_source_code": "# declare a list tasks whose products you want to use as inputs\nupstream = None\n\nimport pdfplumber\nimport PyPDF2\nfrom PIL import Image\nimport re\nimport io\nimport base64\nimport nbformat\n\nimport os\nimport nbformat\nfrom nbformat.v4 import new_code_cell, new_markdown_cell\nimport pdfplumber\nimport re\nimport io\nimport base64\n\n# Load or initialize notebook\nif os.path.exists(\"/home/jerem/Desktop/Carnet_de_Curiosite_ml.ipynb\"):\n    nb = nbformat.read(\"/home/jerem/Desktop/Carnet_de_Curiosite_ml.ipynb\", as_version=4)\nelse:\n    nb = nbformat.v4.new_notebook()\n\nnew_cells = []\n\n# Process PDF pages\nwith pdfplumber.open(\"/home/jerem/Desktop/Carnet de Curiosit\u00e9 _ Intention, D\u00e9cision & Curiosit\u00e9 \u2013 Un voyage interdisciplinaire.pdf\") as pdf:\n    for i, page in enumerate(pdf.pages, start=1):\n        # Extract words for proper spacing\n        words = page.extract_words()\n        if words:\n            words_sorted = sorted(words, key=lambda x: (x['top'], x['x0']))\n            text = ' '.join(w['text'] for w in words_sorted)\n        else:\n            text = page.extract_text() or \"\"\n        # Page header\n        new_cells.append(new_markdown_cell(f\"## Page {i}\\n\"))\n        # Detect and split by section titles\n        pattern = re.compile(r\"(^[A-Z0-9].*)\", re.M)\n        parts = pattern.split(text)\n        for idx in range(1, len(parts), 2):\n            title = parts[idx].strip()\n            body = parts[idx+1].strip()\n            md = f\"# {title}\\n\\n{body}\"\n            new_cells.append(new_markdown_cell(md))\n        # Extract images\n        for img in page.images:\n            im = page.within_bbox((img[\"x0\"], img[\"top\"], img[\"x1\"], img[\"bottom\"])).to_image(resolution=300).original\n            buf = io.BytesIO()\n            im.save(buf, format=\"PNG\")\n            data = base64.b64encode(buf.getvalue()).decode(\"utf-8\")\n            img_md = f\"![](data:image/png;base64,{data})\"\n            new_cells.append(new_markdown_cell(img_md))\n\n# Insert ML scaffolding after first cell\nnew_cells.insert(1, new_code_cell(\"# Data Preprocessing Placeholder\\n# TODO: Add data preprocessing steps\"))\n\n# Append cells and set metadata\nnb.cells.extend(new_cells)\nnb.metadata.kernelspec = {\n    \"display_name\": \"Python 3\",\n    \"language\": \"python\",\n    \"name\": \"python3\"\n}\nnb.metadata.language_info = {\n    \"name\": \"python\",\n    \"version\": \"3\"\n}\n\n# Write notebook\nnbformat.write(nb, \"/home/jerem/Desktop/Carnet_de_Curiosite_ml.ipynb\")\n", "params": {}}